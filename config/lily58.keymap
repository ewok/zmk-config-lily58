/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

&lt {
};

&mt {
};

/ {
    behaviors {
        mt_twk: mt_twk {
            compatible = "zmk,behavior-hold-tap";
            label = "MT_TWK";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <200>;
            flavor = "balanced";
        };

        lt_h: lt_h {
            compatible = "zmk,behavior-hold-tap";
            label = "LT_H";
            bindings = <&mo>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <200>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // ------------------------------------------------------------------------------------------------------------
            // |  ESC  |  1  |  2  |  3   |  4   |  5   |                   |  6   |  7    |  8    |  9   |   0   |   `   |
            // |  TAB  |  Q  |  W  |  E   |  R   |  T   |                   |  Y   |  U    |  I    |  O   |   P   |   -   |
            // |  CTRL |  A  |  S  |  D   |  F   |  G   |                   |  H   |  J    |  K    |  L   |   ;   |   '   |
            // | SHIFT |  Z  |  X  |  C   |  V   |  B   |   "["  |  |  "]"  |  N   |  M    |  ,    |  .   |   /   | SHIFT |
            //                     | ALT  | GUI  | LOWER|  SPACE |  | ENTER | RAISE| BSPC  | GUI   |

            bindings = <
&kp F1            &kp F2  &kp F3  &kp F4    &kp F5     &kp F6                                                 &kp F7               &kp F8       &kp F9              &kp F10  &kp F11   &kp F12
&kp RIGHT         &kp Q   &kp W   &kp E     &kp R      &kp T                                                  &kp Y                &kp U        &kp I               &kp O    &kp P     &kp LEFT_BRACKET
&mt LCTRL ESCAPE  &kp A   &kp S   &kp D     &kp F      &kp G                                                  &kp H                &kp J        &kp K               &kp L    &kp SEMI  &mt RCTRL SQT
&kp LALT          &kp Z   &kp X   &kp C     &kp V      &kp B                &kp PG_UP      &kp PAGE_DOWN      &kp N                &kp M        &kp COMMA           &kp DOT  &kp FSLH  &mt RALT DOUBLE_QUOTES
                                  &kp LGUI  &lt 2 TAB  &mt_twk LSHFT SPACE  &lt_h 1 RET    &lt_h 1 BACKSPACE  &mt_twk RSHFT SPACE  &lt 2 GRAVE  &mt RGUI LG(SPACE)
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        lower_layer {
            // --------------------------------------------------------------------------------------------------------------
            // | LPAD  | BRDn | BRUp |  MUT |  Vo- |  Vo+ |                   |      |       |       |      |       |       |
            // |  F1   |  F2  |  F3  |  F4  |  F5  |  F6  |                   |  F7  |  F8   |  F9   |  F10 |  F11  |  F12  |
            // |   `   |  !   |  @   |  #   |  $   |  %   |                   |  ^   |  &    |  *    |  (   |   )   |   ~   |
            // |       |      |      |      |      |      |        |  |       |      |  _    |  +    |  {   |   }   |  "|"  |
            //                       |      |      |      |        |  |       |      |       |       |

            bindings = <
&kp LC(LA(F1))       &kp LA(LC(F2))  &kp LA(LC(F3))  &kp LA(LC(F4))  &kp LA(LC(F5))    &kp LA(LC(F6))                                     &kp LA(LC(F7))         &kp LA(LC(F8))     &kp LA(LC(F9))   &kp LA(LC(F10))   &kp LA(LC(F11))  &kp LA(LC(F12))
&kp PIPE             &kp NUMBER_1    &kp NUMBER_2    &kp NUMBER_3    &kp NUMBER_4      &kp NUMBER_5                                       &kp NUMBER_6           &kp NUMBER_7       &kp NUMBER_8     &kp NUMBER_9      &kp NUMBER_0     &kp BACKSLASH
&mt LCTRL MINUS      &kp EXCL        &kp AT          &kp HASH        &kp DOLLAR        &kp PRCNT                                          &kp CARET              &kp AMPS           &kp STAR         &kp LPAR          &kp RPAR         &mt RCTRL EQUAL
&mt LALT UNDERSCORE  &kp ASTERISK    &kp LESS_THAN   &kp LEFT_BRACE  &kp LEFT_BRACKET  &kp LEFT_PARENTHESIS  &trans    &trans             &kp RIGHT_PARENTHESIS  &kp RIGHT_BRACKET  &kp RIGHT_BRACE  &kp GREATER_THAN  &kp SLASH        &mt RIGHT_ALT PLUS
                                                     &trans          &trans            &trans                &trans    &kp LA(BACKSPACE)  &trans                 &trans             &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        raise_layer {
            // ------------------------------------------------------------------------------------------------------------
            // |       |     |     |      |      |      |                   |      |       |       |      |       |       |
            // |   `   |  1  |  2  |  3   |  4   |  5   |                   |  6   |   7   |   8   |  9   |   0   |       |
            // |   F1  |  F2 |  F3 |  F4  |  F5  |  F6  |                   |      |   <-  |   v   |  ^   |  ->   |       |
            // |   F7  |  F8 |  F9 |  F10 |  F11 |  F12 |        |  |       |  +   |   -   |   =   |  [   |   ]   |   \   |
            //                     |      |      |      |        |  |       |      |       |       |

            bindings = <
&bt BT_CLR         &bt BT_SEL 0    &bt BT_SEL 1     &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4                    &trans          &trans         &trans           &trans      &trans                &kp LC(PRINTSCREEN)
&trans             &trans          &trans           &trans        &trans        &trans                          &kp C_PP        &kp C_VOL_DN   &kp C_VOLUME_UP  &kp C_MUTE  &kp C_BRIGHTNESS_INC  &kp PRINTSCREEN
&kp LCTRL          &trans          &trans           &trans        &trans        &trans                          &kp LEFT_ARROW  &kp DOWN       &kp UP_ARROW     &kp RIGHT   &kp C_BRIGHTNESS_DEC  &mt RCTRL K_APP
&mt LALT CAPSLOCK  &kp SCROLLLOCK  &kp PAUSE_BREAK  &trans        &trans        &trans        &trans    &trans  &kp HOME        &kp PAGE_DOWN  &kp PAGE_UP      &kp END     &kp INS               &mt RALT DELETE
                                                    &trans        &trans        &trans        &to 3     &trans  &trans          &trans         &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        gaming {
            bindings = <
&kp Y           &kp U  &kp I  &kp O         &kp P    &kp LEFT_BRACKET                                  &none      &none  &none          &none    &none     &none
&kp CAPSLOCK    &kp Q  &kp W  &kp E         &kp R    &kp T                                             &kp Y      &kp U  &kp I          &kp O    &kp P     &kp LEFT_BRACKET
&kp LEFT_SHIFT  &kp A  &kp S  &kp D         &kp F    &kp G                                             &kp H      &kp J  &kp K          &kp L    &kp SEMI  &kp RIGHT_SHIFT
&kp LCTRL       &kp Z  &kp X  &kp C         &kp V    &kp B             &kp PG_UP        &kp PAGE_DOWN  &kp N      &kp M  &kp COMMA      &kp DOT  &kp FSLH  &kp RCTRL
                              &kp LEFT_ALT  &kp TAB  &kp SPACE         &lt_h 4 ENTER    &kp BACKSPACE  &kp SPACE  &none  &kp RIGHT_ALT
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        gamin_lower {
            bindings = <
&trans      &trans        &trans        &trans        &trans        &trans                          &trans  &trans  &trans  &trans  &trans  &trans
&kp ESCAPE  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_4  &kp NUMBER_5                    &trans  &trans  &trans  &trans  &trans  &trans
&kp F5      &kp NUMBER_6  &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &kp NUMBER_0                    &trans  &trans  &trans  &trans  &trans  &trans
&kp F6      &kp M         &kp I         &trans        &trans        &trans        &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
                                        &trans        &to 0         &trans        &trans    &trans  &trans  &trans  &trans
            >;
        };
    };
};
